{
 "cells": [
  {
   "cell_type": "code",
   "execution_count": 56,
   "metadata": {},
   "outputs": [],
   "source": [
    "import requests # from urllib.request import urlopen\n",
    "from bs4 import BeautifulSoup # HTTP Response -> HTML\n",
    "\n",
    "# import pandas as pd\n",
    "# from datetime import datetime\n",
    "# import time\n",
    "# import re"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 34,
   "metadata": {},
   "outputs": [
    {
     "ename": "SyntaxError",
     "evalue": "invalid syntax (<ipython-input-34-4f07de91716d>, line 1)",
     "output_type": "error",
     "traceback": [
      "\u001b[1;36m  File \u001b[1;32m\"<ipython-input-34-4f07de91716d>\"\u001b[1;36m, line \u001b[1;32m1\u001b[0m\n\u001b[1;33m    https://search.naver.com/search.naver?where=nexearch&sm=tab_jum&query=을지면옥\u001b[0m\n\u001b[1;37m           ^\u001b[0m\n\u001b[1;31mSyntaxError\u001b[0m\u001b[1;31m:\u001b[0m invalid syntax\n"
     ]
    }
   ],
   "source": [
    "https://search.naver.com/search.naver?where=nexearch&sm=tab_jum&query=을지면옥"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 57,
   "metadata": {},
   "outputs": [],
   "source": [
    "query = '을지면옥'\n",
    "url = \"https://search.naver.com/search.naver?where=nexearch&sm=tab_jum&query=\" + query"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 58,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "https://search.naver.com/search.naver?where=nexearch&sm=tab_jum&query=을지면옥\n"
     ]
    }
   ],
   "source": [
    "print(url)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 37,
   "metadata": {},
   "outputs": [],
   "source": [
    "# web = urlopen(url)\n",
    "# print(web)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 38,
   "metadata": {},
   "outputs": [],
   "source": [
    "# web = requests.get(url).content\n",
    "# print(web)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 59,
   "metadata": {},
   "outputs": [],
   "source": [
    "web = requests.get(url).content\n",
    "source = BeautifulSoup(web, 'html.parser')\n",
    "# print(source) # source를 그대로 출력할 경우, 담고 있는 텍스트가 무척 많아서 버벅이게 될 수 있습니다."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 113,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "['944']\n"
     ]
    }
   ],
   "source": [
    "# 을지면옥 방문자 리뷰수\n",
    "reviewcount = source.find_all('span', {'class': 'count'})[1].get_text()\n",
    "\n",
    "review_list = []\n",
    "\n",
    "review_list.append(reviewcount)\n",
    "\n",
    "print(reviews_list)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 115,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "['4.35']\n"
     ]
    }
   ],
   "source": [
    "# # 을지면옥 평점 다른 방법\n",
    "# float(rate.split('/')[0].strip())\n",
    "\n",
    "# 을지면옥 평점 \n",
    "rate = source.find_all('div', {'class': 'star_area'})[0].find('em').get_text()\n",
    "\n",
    "rate_list = []\n",
    "\n",
    "rate_list.append(rate)\n",
    "\n",
    "print(rate_list)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 117,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "['서울 중구 충무로14길 2-1']\n"
     ]
    }
   ],
   "source": [
    "# 을지면옥 위치\n",
    "location = source.find('span', {'class': 'addr'}).get_text()\n",
    "\n",
    "location_list = []\n",
    "\n",
    "location_list.append(location)\n",
    "\n",
    "print(location_list)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": []
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "Python 3",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.7.3"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 2
}
